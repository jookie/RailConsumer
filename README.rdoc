== Welcome to Sample API consumer or API client
==Description to Sample API consumer or API client
see it working

STEP 1: generate the rails app

we will call it RailConsumer

$ rails new api_consumer

STEP 2: add rest-client gems to your Gemfile

gem ‘rest-client’

run bundle install on the terminal

$ bundle install

STEP 3: generate the products controller

STEP 4: add the routes for users resource in your routes
ApiConsumer::Application.routes.draw do
resources :products
end

STEP 5: Write the users controller code.

Productss controller will have, the same actions and flow as you have seen in your,

users controller, except that, here you interact with API provider database,

thorugh its API call. IF you see the API provider document, you can see that they have provided you the authentication, url and expected data format.

You just have to make a call to these URL and handle the returned data in your application. API now a days return, data in XML or json format in general,

The API provider whose service we are going to use return JASZON data by default i,e if you do not provide format in URL, they will return JSON data.


So below is our controller code :

NOTE : see the use of get post put and delete call of the REST client. It will decide which action of API provider will be called for certain URL


both the API provider and API consumer are sample application running on my own local machine.
I have fixed the port 3000 for the API provider application. so start the API provider application on 3000, which is by default

$ cd to_api_provider_folder

$ rails s # will start the API provider service at 3000

NOTE : for API consumer code to work, The API provider application must be up and running

Start the API consumer application on some other port, say 3030

$ cd api_consumer

$ rails s -p 3030

Go to the index page of the application:

http://localhost:3030/users # it will show you all product with edit | delete link and also a create new user link.

So remaining things are self explainatory, try it out  yourself
